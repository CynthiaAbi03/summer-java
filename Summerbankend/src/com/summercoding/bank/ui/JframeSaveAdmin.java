/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.summercoding.bank.ui;

import com.summercoding.bank.controleur.Controleur;
import com.summercoding.bank.entity.Admin;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author cynthiaabi
 */
public class JframeSaveAdmin extends javax.swing.JFrame {
    
    Controleur controleur = new Controleur();
    
    String whatAction;
    
    JframeHome homePage;

    /**
     * Creates new form JframeSaveAdmin
     */
    public JframeSaveAdmin(String action, int idadmin, JframeHome hp) {
        
        initComponents();
        
        homePage = hp;
        
        whatAction = action;
        
        if (whatAction.equals("add")){
            
            updateAdminButton.setVisible(false);
            deleteAdminButton.setVisible(false);
            champIdAdmin.setVisible(false);
            labelIdAdmin.setVisible(false);
        }
        
        else if (whatAction.equals("update")) {
            
            try {
                
                Admin admin = controleur.routeVersGetOne(idadmin);
                
                ChampLogin.setText(admin.getLogin());
                ChampNom.setText(admin.getLogin());
                ChampPassword.setText(admin.getPassword());
                champIdAdmin.setText(admin.getIdadmin()+"");
                
                buttonAddAdmin.setVisible(false);
            } 
            
            catch (SQLException ex) {
                Logger.getLogger(JframeSaveAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ChampLogin = new javax.swing.JTextField();
        ChampNom = new javax.swing.JTextField();
        ChampPassword = new javax.swing.JPasswordField();
        buttonAddAdmin = new javax.swing.JButton();
        cancelAdminButton = new javax.swing.JButton();
        deleteAdminButton = new javax.swing.JButton();
        updateAdminButton = new javax.swing.JButton();
        champIdAdmin = new javax.swing.JTextField();
        labelIdAdmin = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("SignUp Admin");

        jLabel1.setText("Login");

        jLabel2.setText("Nom");

        jLabel3.setText("Password\n");

        buttonAddAdmin.setText("Add");
        buttonAddAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddAdminActionPerformed(evt);
            }
        });

        cancelAdminButton.setText("Cancel");
        cancelAdminButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelAdminButtonActionPerformed(evt);
            }
        });

        deleteAdminButton.setText("Delete");
        deleteAdminButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAdminButtonActionPerformed(evt);
            }
        });

        updateAdminButton.setText("Update");
        updateAdminButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateAdminButtonActionPerformed(evt);
            }
        });

        champIdAdmin.setEditable(false);

        labelIdAdmin.setText("Id Admin");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(labelIdAdmin)
                        .addComponent(cancelAdminButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ChampLogin)
                    .addComponent(ChampNom)
                    .addComponent(ChampPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(deleteAdminButton)
                        .addGap(18, 18, 18)
                        .addComponent(updateAdminButton)
                        .addGap(18, 18, 18)
                        .addComponent(buttonAddAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(champIdAdmin))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ChampLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ChampNom, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ChampPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(champIdAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelIdAdmin))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonAddAdmin)
                    .addComponent(updateAdminButton)
                    .addComponent(deleteAdminButton)
                    .addComponent(cancelAdminButton))
                .addContainerGap(101, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonAddAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddAdminActionPerformed
        try {
            // TODO add your handling code here:
            
            String login = ChampLogin.getText();
            String nom = ChampNom.getText();
            String password = ChampPassword.getText();
            
            controleur.routeVersSave(login, password, nom);
            JOptionPane.showMessageDialog(null, "Success");
             
             ChampLogin.setText("");
             ChampNom.setText("");
             ChampPassword.setText("");
             
             refreshTable();
             
             this.dispose();

            
        } 
        
        catch (SQLException ex) {
            Logger.getLogger(JframeSaveAdmin.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Please try again later");
            
                    }
        
        
    }//GEN-LAST:event_buttonAddAdminActionPerformed

    private void cancelAdminButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelAdminButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_cancelAdminButtonActionPerformed

    private void updateAdminButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateAdminButtonActionPerformed
        try {
            // TODO add your handling code here:
            
            String idAdminString = champIdAdmin.getText();
            
            int idadmin = Integer.parseInt(idAdminString);
            
            String login = ChampLogin.getText();
            
            String nom = ChampNom.getText();
            
            String password = ChampPassword.getText();
            
            controleur.routeVersUpdate(idadmin, login, password, nom);
            
            //JOptionPane.showMessageDialog(null,"Update Successfull" );
            
            this.dispose();
            
            refreshTable();
            
            //we need to update the table
        } 
        
        catch (SQLException ex) {
            Logger.getLogger(JframeSaveAdmin.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,"internal error. Try again later");
        }
        
        
        
    }//GEN-LAST:event_updateAdminButtonActionPerformed

    private void deleteAdminButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAdminButtonActionPerformed
        try {
            // TODO add your handling code here:
            
            String id = champIdAdmin.getText();
            
            int idadmin = Integer.parseInt(id);
            
            controleur.routeVersDeleteAdmin(idadmin);
            
            this.dispose();
            
            refreshTable();
            
        } 
        
        catch (SQLException ex) {
            Logger.getLogger(JframeSaveAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteAdminButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JframeSaveAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JframeSaveAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JframeSaveAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JframeSaveAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JframeSaveAdmin("add",0,null).setVisible(true);
            }
        });
    }
    
    private void refreshTable() {
        
        try {
            
            List<Admin> listAdmin = controleur.routeVersListAdmin();
            
            DefaultTableModel model = new DefaultTableModel();
            
            model.addColumn("id");
            model.addColumn("Nom");
            model.addColumn("Login");
            
            for(Admin ad : listAdmin ) {
                
                model.addRow(new String[]{ad.getIdadmin() + "",ad.getNom(), ad.getLogin() }); // + "" is used to change ad.getIdadmin() to a string by concatenating it to an empty string "" which forces the conversion
            }
            
            homePage.getTable().setModel(model);
        }
        
        catch (SQLException ex) {
            Logger.getLogger(JframeSaveAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ChampLogin;
    private javax.swing.JTextField ChampNom;
    private javax.swing.JPasswordField ChampPassword;
    private javax.swing.JButton buttonAddAdmin;
    private javax.swing.JButton cancelAdminButton;
    private javax.swing.JTextField champIdAdmin;
    private javax.swing.JButton deleteAdminButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelIdAdmin;
    private javax.swing.JButton updateAdminButton;
    // End of variables declaration//GEN-END:variables
}
